// Code generated by MockGen. DO NOT EDIT.
// Source: mongo_client.go

// Package mock_clients is a generated GoMock package.
package mock_clients

import (
	context "context"
	model "github.com/bevgene/go-currency-rate/app/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMongoClient is a mock of MongoClient interface
type MockMongoClient struct {
	ctrl     *gomock.Controller
	recorder *MockMongoClientMockRecorder
}

// MockMongoClientMockRecorder is the mock recorder for MockMongoClient
type MockMongoClientMockRecorder struct {
	mock *MockMongoClient
}

// NewMockMongoClient creates a new mock instance
func NewMockMongoClient(ctrl *gomock.Controller) *MockMongoClient {
	mock := &MockMongoClient{ctrl: ctrl}
	mock.recorder = &MockMongoClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMongoClient) EXPECT() *MockMongoClientMockRecorder {
	return m.recorder
}

// AddRateDocument mocks base method
func (m *MockMongoClient) AddRateDocument(arg0 context.Context, arg1 *model.ExchangeRateDocument) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddRateDocument", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddRateDocument indicates an expected call of AddRateDocument
func (mr *MockMongoClientMockRecorder) AddRateDocument(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRateDocument", reflect.TypeOf((*MockMongoClient)(nil).AddRateDocument), arg0, arg1)
}

// GetLatestRateDocument mocks base method
func (m *MockMongoClient) GetLatestRateDocument(arg0 context.Context) (*model.ExchangeRateDocument, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestRateDocument", arg0)
	ret0, _ := ret[0].(*model.ExchangeRateDocument)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestRateDocument indicates an expected call of GetLatestRateDocument
func (mr *MockMongoClientMockRecorder) GetLatestRateDocument(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestRateDocument", reflect.TypeOf((*MockMongoClient)(nil).GetLatestRateDocument), arg0)
}
