# Root key of everything related to mortar configuration
mortar:
  # Application/Project name
  # Type: string
  name: "exchange_rate"
  # Web server related configuration
  server:
    grpc:
      # gRPC API External port
      # Type: int
      port: 5380
    rest:
      # RESTful API External port
      # Type: int
      external:
        port: 5381
      # RESTful API Internal port
      # Type: int
      internal:
        port: 5382
  # Default Logger related configuration
  logger:
    # Set the default log level for mortar logger
    # Possible values:
    #		trace, debug, info, warn, error
    # Type: string
    level: debug
    static:
      # enables/disables adding a git commit SHA in every log entry
      # Type: bool
      git: true
      # enables/disables adding a hostname in every log entry
      # Type: bool
      host: true
      # enables/disables adding an application/project name in every log entry
      # Type: bool
      name: true
  # Metrics/Monitoring related configuration
  monitor:
    # sets the namespace/prefix of every metric. Depends on the Metrics implementation
    # Type: string
    prefix: "exchange_rate"
    # allows to include static labels/tags to every published metric
    # Type: map[string]string
    tags:
      service: greeter
  # Bundled handlers configuration
  handlers:
    config:
      # defines a list of keywords that once contained within the configuration key will obfuscate the value
      # Type: []string
      obfuscate:
        - "pass"
        - "auth"
        - "secret"
        - "login"
        - "user"
        - "logname"
        - "token"
  # Interceptors/Extractors configuration
  middleware:
    # set the default log level of all the bundled middleware that writes to log
    # Possible values:
    # 	trace, debug, info, warn, error
    # Type: string
    logLevel: "debug"
    # list of headers to be extracted from Incoming gRPC and added to every log entry
    # Type: []string
    logHeaders:
      - "special-header"
    trace:
      http:
        client:
          # include HTTP client request to trace info ?
          # Type: bool
          request: true
          # include HTTP client response to trace info ?
          # Type: bool
          response: true
      grpc:
        client:
          # include gRPC client request to trace info ?
          # Type: bool
          request: true
          # include gRPC client response to trace info ?
          # Type: bool
          response: true
        server:
          # include incoming gRPC request to trace info ?
          # Type: bool
          request: true
          # include a gRPC response of incoming request to trace info ?
          response: true
    copy:
      # list of header prefixes to copy/forward from Incoming gRPC context to outgoing Request context/headers
      # Type: []string
      headers:
        - "authorization"

# This service configuration should be here
exchangerate:
  logger:
    console: false
  exchange:
    apiKey: ""
    url: "http://data.fixer.io/api/latest"
    timeout: "30s"
  database:
    host: "localhost"
    port: "27017"
    user: ""
    password: ""
    name: "currencyconverter"
    collection: "rates"
  temporal:
    hostPort: "localhost:7233"
    namespace: "default"
    workflowName: "update_rates"
    queue: "exchangerate"
    maxConcurrentWorkers: "4"
    # The cron spec is as following:
    # ┌───────────── minute (0 - 59)
    # │ ┌───────────── hour (0 - 23)
    # │ │ ┌───────────── day of the month (1 - 31)
    # │ │ │ ┌───────────── month (1 - 12)
    # │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday)
    # │ │ │ │ │
    # │ │ │ │ │
    # * * * * *
    # currently set to a hourly base:
    cronSchedule: "0 * * * *"